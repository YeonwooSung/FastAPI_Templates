[tool.poetry]
name = "fastapi_modular_monolith_starter_kit"
version = "0.1.0"
description = ""
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
uvicorn = {extras = ["standard"], version = "^0.30.1"}
fastapi = "^0.114.0"
pydantic = {extras = ["email"], version = "^2.9.0"}
pydantic-settings = "^2.3.4"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.31"}
psycopg = {extras = ["binary", "pool"], version = "^3.2.1"}
alembic = "^1.13.2"
tenacity = "^8.5.0"
passlib = {extras = ["argon2"], version = "^1.7.4"}
pyjwt = "^2.8.0"
fastapi-limiter = "^0.1.6"
redis = "^5.0.7"
structlog = "^24.4.0"
aiocache = {extras = ["msgpack", "redis"], version = "^0.12.2"}
fastapi-events = "^0.11.1"
aiosmtplib = "^3.0.2"
taskiq = "^0.11.7"
taskiq-redis = "^1.0.0"
jinja2 = "^3.1.4"
python-multipart = "^0.0.9"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.0"
mypy = "^1.11.1"
pytest = "^8.3.2"
coverage = "^7.6.1"
pytest-dotenv = "^0.5.2"
pytest-asyncio = "^0.23.8"
faker = "^27.0.0"
factory-boy = "^3.3.1"
freezegun = "^1.5.1"
cerberus = "^1.3.5"
httpx = "^0.27.2"

[virtualenvs]
in-project = true

[tool.ruff]
target-version = "py312"
exclude = [".venv", "migrations"]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.format]
quote-style = "single"

[tool.mypy]
python_version = "3.12"
exclude = [".venv", "migrations"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
asyncio_mode = "auto"
testpaths = [
    "tests",
]
env_override_existing_values = 1
env_files = [
    ".test.env"
]